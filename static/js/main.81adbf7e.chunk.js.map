{"version":3,"sources":["gcode/transformers/retract.ts","Block.tsx","blocks/GCodeInputBlock.tsx","blocks/GCodeOutputBlock.tsx","forms/FormContainer.tsx","forms/NumberInput.tsx","gcode/transformers/actions.ts","gcode/transformers/transformer.ts","gcode/transformers/index.ts","gcode/transformers/temperature.ts","gcode/transformers/acceleration.ts","gcode/transformers/jerk.ts","gcode/transformers/flow.ts","gcode/transformers/linearAdvance.ts","state/gcode.ts","state/index.ts","blocks/GCodeSettingsBlock.tsx","forms/RangeGroup.tsx","utils.ts","blocks/TowerSettings.tsx","blocks/SummaryBlock.tsx","CopyCode.tsx","TestShapes.tsx","Header.tsx","Intro.tsx","gcode/utils.ts","gcode/processor.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["RetractMode","Block","props","className","icon","titleIcon","fixedWidth","title","children","GCodeInputBlock","fileRef","useRef","faFileUpload","type","accept","onChange","e","file","target","files","ref","filename","onClick","current","click","faUpload","GCodeOutputBlock","faFileDownload","disabled","enabled","onProcessClick","faStream","FormContainer","NumberInput","label","labelIcon","value","step","min","Number","onBlur","units","TransformerAction","TransformerActionWithLines","lines","TransformerActionNoOp","TransformerActionSkipToEnd","TransformerActionReplace","TransformerActionAppend","GCodeTransformer","line","location","TransformVariable","RetractTransformer","opts","distanceRange","speedRange","retractMode","retractRegex","relativeRegex","absoluteRegex","Absolute","match","this","Relative","chunk","retractMatch","distance","parseFloat","groups","direction","newDistance","newSpeed","start","stop","toFixed","endChunk","TemperatureTransformer","tempRange","newTemp","Math","floor","AccelerationTransformer","accelRange","newAccel","JerkTransformer","newJerk","FlowTransformer","flowRange","newFlow","LinearAdvanceTransformer","newK","variableDefaultRanges","RetractDistance","RetractSpeed","Temperature","Acceleration","Jerk","Flow","LinearAdvance","gcodeActions","variable","setType","createAction","setRange","gcodeSettings","set","gcodeReducer","createReducer","state","range","baseHeight","layerHeight","stepHeight","getInitialState","builder","addCase","action","payload","rootReducer","combineReducers","gcode","store","configureStore","reducer","useSelector","useUntypedSelector","GCodeSettingsBlock","dispatch","useDispatch","faCog","faLayerGroup","faLevelDownAlt","faLevelUpAlt","RangeGroup","onInputChange","key","faPlay","v","faStepForward","faStop","variableToCopy","name","VariableSelector","options","Object","entries","map","c","faAtom","TowerSettings","variableCopy","snapRange","SummaryBlockStep","round","SummaryBlock","stepValues","values","x","i","push","rangeValues","reverse","copy","length","useState","copied","setCopied","statusTextClasses","classNames","CopyCodeStatusText","navigator","clipboard","writeText","setTimeout","faCopy","pull","RotatingVideo","videoRef","src","path","playsInline","autoPlay","muted","loop","TestShapes","href","process","Header","transform","faGithub","Intro","readFileText","a","Promise","resolve","reject","fileReader","FileReader","onload","result","onerror","readAsText","GCodeFile","text","split","GCodeLocation","layer","z","chunkHeight","chunkOffset","GCodeProcessor","layerRegex","settings","transformer","outputLines","skippingToEnd","updateLocation","layerAction","onLayer","lineAction","onLine","layerMatch","layerNum","parseInt","fromLayer","App","gcodeFile","setGcodeFile","processEnabled","onDragPrevent","preventDefault","onDragEnter","onDragOver","onDrop","dataTransfer","undefined","fromFile","then","f","join","blob","Blob","url","URL","createObjectURL","document","createElement","download","saveLines","fromVariable","Boolean","window","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.81adbf7e.chunk.js","sourcesContent":["import { Range } from \"../../utils\";\nimport { GCodeLocation } from \"../processor\";\nimport {\n  TransformerActionNoOp,\n  TransformerActionSkipToEnd,\n  TransformerAction,\n  TransformerActionReplace,\n} from \"./actions\";\nimport { GCodeTransformer } from \"./transformer\";\n\nenum RetractMode {\n  Absolute,\n  Relative,\n}\n\nexport class RetractTransformer extends GCodeTransformer {\n  readonly distanceRange?: Range;\n  readonly speedRange?: Range;\n\n  private retractMode: RetractMode;\n\n  private readonly retractRegex: RegExp;\n  private readonly relativeRegex: RegExp;\n  private readonly absoluteRegex: RegExp;\n\n  constructor(opts: {\n    distanceRange?: Range;\n    speedRange?: Range;\n    retractRegex?: RegExp;\n  }) {\n    super();\n\n    this.distanceRange = opts.distanceRange;\n    this.speedRange = opts.speedRange;\n    this.retractRegex = opts.retractRegex\n      ? opts.retractRegex\n      : /G(0|1) E(?<distance>(-|\\d|\\.)+) F(?<speed>(\\d|.)+)/;\n\n    this.retractMode = RetractMode.Absolute;\n\n    this.relativeRegex = /M83/;\n    this.absoluteRegex = /M82/;\n  }\n\n  onLine(line: string, location: GCodeLocation): TransformerAction {\n    if (line.match(this.absoluteRegex)) {\n      this.retractMode = RetractMode.Absolute;\n    } else if (line.match(this.relativeRegex)) {\n      this.retractMode = RetractMode.Relative;\n    }\n\n    if (location.chunk === null) return new TransformerActionNoOp();\n\n    const retractMatch = line.match(this.retractRegex);\n    if (!retractMatch) return new TransformerActionNoOp();\n\n    const distance = Number.parseFloat(retractMatch.groups![\"distance\"]);\n    const speed = Number.parseFloat(retractMatch.groups![\"speed\"]);\n    const direction = distance > 0 ? 1 : -1;\n\n    let newDistance = distance;\n    let newSpeed = speed;\n\n    if (this.distanceRange) {\n      newDistance =\n        this.distanceRange.start + location.chunk * this.distanceRange.step;\n\n      if (newDistance > this.distanceRange.stop) {\n        return new TransformerActionSkipToEnd();\n      }\n      newDistance = newDistance * direction;\n    }\n\n    if (this.speedRange) {\n      newSpeed = this.speedRange.start + location.chunk * this.speedRange.step;\n      if (newSpeed > this.speedRange.stop) {\n        return new TransformerActionSkipToEnd();\n      }\n      newSpeed = newSpeed * 60;\n    }\n\n    return new TransformerActionReplace([\n      \"M83 ; Tower Tool\",\n      `G1 E${newDistance.toFixed(3)} F${newSpeed.toFixed(3)} ; Tower Tool`,\n      this.retractMode === RetractMode.Absolute\n        ? \"M82 ; Tower Tool\"\n        : \"M83 ; Tower Tool\",\n    ]);\n  }\n\n  onLayer(location: GCodeLocation): TransformerAction {\n    if (location.chunk === null) return new TransformerActionNoOp();\n\n    if (this.distanceRange) {\n      const endChunk =\n        (this.distanceRange.stop - this.distanceRange.start) /\n        this.distanceRange.step;\n\n      if (location.chunk > endChunk) {\n        return new TransformerActionSkipToEnd();\n      }\n    }\n\n    if (this.speedRange) {\n      const endChunk =\n        (this.speedRange.stop - this.speedRange.start) / this.speedRange.step;\n\n      if (location.chunk > endChunk) {\n        return new TransformerActionSkipToEnd();\n      }\n    }\n\n    return new TransformerActionNoOp();\n  }\n}\n","import React, { FunctionComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport \"./Block.scss\";\n\nexport const Block: FunctionComponent<{\n  title: string;\n  titleIcon: IconProp;\n}> = (props) => {\n  return (\n    <div className=\"Block\">\n      <div className=\"BlockHeader\">\n        <div className=\"BlockHeader__title\">\n          <FontAwesomeIcon icon={props.titleIcon} fixedWidth /> {props.title}\n        </div>\n      </div>\n\n      <div className=\"BlockContent\">{props.children}</div>\n    </div>\n  );\n};\n","import React, { useRef } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUpload, faFileUpload } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Block } from \"../Block\";\n\nimport \"./GCodeInputBlock.scss\";\n\nexport const GCodeInputBlock = (props: {\n  onChange: (file: File) => void;\n  filename?: string;\n}) => {\n  const fileRef = useRef<HTMLInputElement>(null);\n\n  function onFileChange(e: React.ChangeEvent<HTMLInputElement>) {\n    const file = e.target.files![0];\n    props.onChange(file);\n  }\n\n  return (\n    <Block title=\"G-code Input\" titleIcon={faFileUpload}>\n      <div className=\"GCodeInputBlock\">\n        <input\n          type=\"file\"\n          accept=\".gcode\"\n          onChange={onFileChange}\n          ref={fileRef}\n        />\n        <div className=\"GCodeInputBlock__fileName\">\n          {props.filename ? props.filename : \"No file selected.\"}\n        </div>\n\n        <button\n          onClick={() => {\n            fileRef.current?.click();\n          }}\n        >\n          <FontAwesomeIcon icon={faUpload} fixedWidth /> Select File\n        </button>\n      </div>\n    </Block>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faFileDownload, faStream } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Block } from \"../Block\";\n\nexport const GCodeOutputBlock = (props: {\n  onProcessClick: () => void;\n  enabled: boolean;\n}) => {\n  return (\n    <Block title=\"G-code Output\" titleIcon={faFileDownload}>\n      <div className=\"BlockContent__text\">\n        <p>\n          <strong>\n            Make sure to inspect the G-code before running the print!\n          </strong>\n          <br />\n          <br />\n          Any lines added or changed will end with{\" \"}\n          <span className=\"InlineCode\">; Tower Tool</span> so you can find them\n          easily.\n        </p>\n        <button disabled={!props.enabled} onClick={props.onProcessClick}>\n          <FontAwesomeIcon icon={faStream} fixedWidth /> Towerize!\n        </button>\n      </div>\n    </Block>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\n\nimport \"./FormContainer.scss\";\n\nexport const FormContainer: FunctionComponent = (props) => {\n  return <div className=\"FormContainer\">{props.children}</div>;\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { IconProp } from \"@fortawesome/fontawesome-svg-core\";\n\nexport const NumberInput = (props: {\n  onChange?: (value: number) => void;\n  onBlur?: () => void;\n  min?: number;\n  step?: number;\n  value?: number;\n  label: string;\n  labelIcon: IconProp;\n  units: string;\n}) => {\n  return (\n    <label>\n      <div className=\"FormContainer__labelText\">{props.label}</div>\n      <div className=\"FormContainer__inputContainer\">\n        <div className=\"FormContainer__inputIcon\">\n          <FontAwesomeIcon icon={props.labelIcon} fixedWidth />\n        </div>\n        <input\n          type=\"number\"\n          value={props.value}\n          step={props.step}\n          min={props.min ? props.min : 0}\n          onChange={(e) => {\n            props.onChange && props.onChange(Number(e.target.value));\n          }}\n          onBlur={props.onBlur}\n        />\n        <div className=\"FormContainer__inputUnits\">{props.units}</div>\n      </div>\n    </label>\n  );\n};\n","export abstract class TransformerAction {}\nexport abstract class TransformerActionWithLines extends TransformerAction {\n  readonly lines: string[];\n\n  constructor(lines: string[]) {\n    super();\n    this.lines = lines;\n  }\n}\n\nexport class TransformerActionNoOp extends TransformerAction {}\nexport class TransformerActionSkipToEnd extends TransformerAction {}\nexport class TransformerActionReplace extends TransformerActionWithLines {}\nexport class TransformerActionAppend extends TransformerActionWithLines {}\n","import { GCodeLocation } from \"../processor\";\nimport { TransformerAction, TransformerActionNoOp } from \"./actions\";\n\nexport abstract class GCodeTransformer {\n  onLine(line: string, location: GCodeLocation): TransformerAction {\n    return new TransformerActionNoOp();\n  }\n\n  onLayer(location: GCodeLocation): TransformerAction {\n    return new TransformerActionNoOp();\n  }\n}\n","import {\n  TransformerAction,\n  TransformerActionAppend,\n  TransformerActionNoOp,\n  TransformerActionReplace,\n  TransformerActionSkipToEnd,\n} from \"./actions\";\n\nimport { GCodeTransformer } from \"./transformer\";\nimport { RetractTransformer } from \"./retract\";\nimport { TemperatureTransformer } from \"./temperature\";\nimport { AccelerationTransformer } from \"./acceleration\";\nimport { JerkTransformer } from \"./jerk\";\nimport { FlowTransformer } from \"./flow\";\nimport { LinearAdvanceTransformer } from \"./linearAdvance\";\n\nexport enum TransformVariable {\n  RetractDistance,\n  RetractSpeed,\n  Temperature,\n  Acceleration,\n  Jerk,\n  Flow,\n  LinearAdvance,\n}\n\nexport {\n  TransformerAction,\n  TransformerActionAppend,\n  TransformerActionNoOp,\n  TransformerActionReplace,\n  TransformerActionSkipToEnd,\n  GCodeTransformer,\n  RetractTransformer,\n  TemperatureTransformer,\n  AccelerationTransformer,\n  JerkTransformer,\n  FlowTransformer,\n  LinearAdvanceTransformer,\n};\n","import { Range } from \"../../utils\";\nimport { GCodeLocation } from \"../processor\";\nimport { GCodeTransformer } from \"./transformer\";\nimport {\n  TransformerActionSkipToEnd,\n  TransformerActionAppend,\n  TransformerActionNoOp,\n} from \"./actions\";\n\nexport class TemperatureTransformer extends GCodeTransformer {\n  readonly tempRange: Range;\n\n  constructor(tempRange: Range) {\n    super();\n    this.tempRange = tempRange;\n  }\n\n  onLayer(location: GCodeLocation) {\n    if (location.chunk === null) return new TransformerActionNoOp();\n\n    const newTemp = Math.floor(\n      this.tempRange.start + location.chunk! * this.tempRange.step\n    );\n    if (newTemp > this.tempRange.stop) {\n      return new TransformerActionSkipToEnd();\n    }\n\n    return new TransformerActionAppend([\n      `M104 S${newTemp.toFixed(0)} ; Tower Tool`,\n    ]);\n  }\n}\n","import { Range } from \"../../utils\";\nimport { GCodeLocation } from \"../processor\";\nimport { GCodeTransformer } from \"./transformer\";\nimport {\n  TransformerActionNoOp,\n  TransformerActionSkipToEnd,\n  TransformerActionAppend,\n} from \"./actions\";\n\nexport class AccelerationTransformer extends GCodeTransformer {\n  readonly accelRange: Range;\n\n  constructor(accelRange: Range) {\n    super();\n    this.accelRange = accelRange;\n  }\n\n  onLayer(location: GCodeLocation) {\n    if (location.chunk == null) return new TransformerActionNoOp();\n\n    const newAccel = Math.floor(\n      this.accelRange.start + location.chunk! * this.accelRange.step\n    );\n    if (newAccel > this.accelRange.stop) {\n      return new TransformerActionSkipToEnd();\n    }\n\n    return new TransformerActionAppend([`M204 P${newAccel} ; Tower Tool`]);\n  }\n}\n","import { Range } from \"../../utils\";\nimport { GCodeLocation } from \"../processor\";\nimport { GCodeTransformer } from \"./transformer\";\nimport {\n  TransformerActionNoOp,\n  TransformerActionSkipToEnd,\n  TransformerActionAppend,\n} from \"./actions\";\n\nexport class JerkTransformer extends GCodeTransformer {\n  readonly accelRange: Range;\n\n  constructor(accelRange: Range) {\n    super();\n    this.accelRange = accelRange;\n  }\n\n  onLayer(location: GCodeLocation) {\n    if (location.chunk == null) return new TransformerActionNoOp();\n\n    const newJerk = Math.floor(\n      this.accelRange.start + location.chunk! * this.accelRange.step\n    );\n    if (newJerk > this.accelRange.stop) {\n      return new TransformerActionSkipToEnd();\n    }\n\n    return new TransformerActionAppend([\n      `M205 X${newJerk.toFixed(3)} Y${newJerk.toFixed(3)} Z${newJerk.toFixed(\n        3\n      )} ; Tower Tool`,\n    ]);\n  }\n}\n","import { Range } from \"../../utils\";\nimport { GCodeLocation } from \"../processor\";\nimport { GCodeTransformer } from \"./transformer\";\nimport {\n  TransformerActionNoOp,\n  TransformerActionSkipToEnd,\n  TransformerActionAppend,\n} from \"./actions\";\n\nexport class FlowTransformer extends GCodeTransformer {\n  readonly flowRange: Range;\n\n  constructor(flowRange: Range) {\n    super();\n    this.flowRange = flowRange;\n  }\n\n  onLayer(location: GCodeLocation) {\n    if (location.chunk == null) return new TransformerActionNoOp();\n\n    const newFlow = Math.floor(\n      this.flowRange.start + location.chunk! * this.flowRange.step\n    );\n    if (newFlow > this.flowRange.stop) {\n      return new TransformerActionSkipToEnd();\n    }\n\n    return new TransformerActionAppend([\n      `M221 S${newFlow.toFixed(0)} ; Tower Tool`,\n    ]);\n  }\n}\n","import { Range } from \"../../utils\";\nimport { GCodeLocation } from \"../processor\";\nimport { GCodeTransformer } from \"./transformer\";\nimport {\n  TransformerActionNoOp,\n  TransformerActionSkipToEnd,\n  TransformerActionAppend,\n} from \"./actions\";\n\nexport class LinearAdvanceTransformer extends GCodeTransformer {\n  readonly accelRange: Range;\n\n  constructor(accelRange: Range) {\n    super();\n    this.accelRange = accelRange;\n  }\n\n  onLayer(location: GCodeLocation) {\n    if (location.chunk == null) return new TransformerActionNoOp();\n\n    const newK = this.accelRange.start + location.chunk! * this.accelRange.step;\n    if (newK > this.accelRange.stop) {\n      return new TransformerActionSkipToEnd();\n    }\n\n    return new TransformerActionAppend([`M900 K${newK} ; Tower Tool`]);\n  }\n}\n","import { createReducer, createAction } from \"@reduxjs/toolkit\";\n\nimport { Range } from \"../utils\";\nimport { TransformVariable } from \"../gcode/transformers\";\nimport { GCodeSettings } from \"../gcode/processor\";\n\nconst variableDefaultRanges: Record<TransformVariable, Range> = {\n  [TransformVariable.RetractDistance]: {\n    start: 1,\n    step: 0.25,\n    stop: 5,\n  },\n  [TransformVariable.RetractSpeed]: {\n    start: 10,\n    step: 10,\n    stop: 100,\n  },\n  [TransformVariable.Temperature]: {\n    start: 180,\n    step: 10,\n    stop: 240,\n  },\n  [TransformVariable.Acceleration]: {\n    start: 500,\n    step: 100,\n    stop: 2000,\n  },\n  [TransformVariable.Jerk]: {\n    start: 5,\n    step: 5,\n    stop: 50,\n  },\n  [TransformVariable.Flow]: {\n    start: 95,\n    step: 1,\n    stop: 105,\n  },\n  [TransformVariable.LinearAdvance]: {\n    start: 0.1,\n    step: 0.1,\n    stop: 1,\n  },\n};\n\nexport interface GcodeReducerState {\n  variable: {\n    type: TransformVariable;\n    range: Range;\n  };\n  gcodeSettings: GCodeSettings;\n}\n\nexport const gcodeActions = {\n  variable: {\n    setType: createAction<TransformVariable>(\"variable/setType\"),\n    setRange: createAction<Range>(\"variable/setRange\"),\n  },\n  gcodeSettings: {\n    set: createAction<GCodeSettings>(\"gcodeSettings/set\"),\n  },\n};\n\nconst getInitialState = (): GcodeReducerState => {\n  const state: Omit<GcodeReducerState, \"processor\"> = {\n    variable: {\n      type: TransformVariable.RetractDistance,\n      range: variableDefaultRanges[TransformVariable.RetractDistance],\n    },\n    gcodeSettings: {\n      baseHeight: 0.5,\n      layerHeight: 0.25,\n      stepHeight: 4,\n    },\n  };\n\n  return {\n    ...state,\n  };\n};\n\nexport const gcodeReducer = createReducer(getInitialState(), (builder) => {\n  builder\n    .addCase(gcodeActions.gcodeSettings.set, (state, action) => {\n      state.gcodeSettings = action.payload;\n    })\n    .addCase(gcodeActions.variable.setType, (state, action) => {\n      state.variable.type = action.payload;\n      state.variable.range = variableDefaultRanges[state.variable.type];\n    })\n    .addCase(gcodeActions.variable.setRange, (state, action) => {\n      state.variable.range = action.payload;\n    });\n});\n","import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport {\n  useSelector as useUntypedSelector,\n  TypedUseSelectorHook,\n} from \"react-redux\";\n\nimport { gcodeReducer } from \"./gcode\";\n\nconst rootReducer = combineReducers({\n  gcode: gcodeReducer,\n});\n\nexport const store = configureStore({\n  reducer: rootReducer,\n});\n\nexport type RootState = ReturnType<typeof rootReducer>;\nexport const useSelector: TypedUseSelectorHook<RootState> = useUntypedSelector;\n","import React, { FunctionComponent } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  faCog,\n  faLayerGroup,\n  faLevelDownAlt,\n  faLevelUpAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Block } from \"../Block\";\nimport { FormContainer } from \"../forms/FormContainer\";\nimport { NumberInput } from \"../forms/NumberInput\";\n\nimport { gcodeActions } from \"../state/gcode\";\nimport { useSelector } from \"../state\";\n\nexport const GCodeSettingsBlock: FunctionComponent = () => {\n  const dispatch = useDispatch();\n  const gcodeSettings = useSelector((state) => state.gcode.gcodeSettings);\n\n  return (\n    <Block title=\"G-code Settings\" titleIcon={faCog}>\n      <div className=\"BlockContent__text\">\n        <p>\n          Customize your <strong>slicer</strong> and <strong>test shape</strong>{\" \"}\n          settings. The defaults here are perfect for our test shapes.\n        </p>\n      </div>\n      <FormContainer>\n        <NumberInput\n          label=\"Layer Height\"\n          labelIcon={faLayerGroup}\n          value={gcodeSettings.layerHeight}\n          step={0.05}\n          min={0}\n          units={\"mm\"}\n          onChange={(value) => {\n            dispatch(\n              gcodeActions.gcodeSettings.set({\n                ...gcodeSettings,\n                layerHeight: value,\n              })\n            );\n          }}\n        />\n        <NumberInput\n          label=\"Base Height\"\n          labelIcon={faLevelDownAlt}\n          value={gcodeSettings.baseHeight}\n          step={0.25}\n          min={0}\n          units={\"mm\"}\n          onChange={(value) => {\n            dispatch(\n              gcodeActions.gcodeSettings.set({\n                ...gcodeSettings,\n                baseHeight: value,\n              })\n            );\n          }}\n        />\n        <NumberInput\n          label=\"Step Height\"\n          labelIcon={faLevelUpAlt}\n          value={gcodeSettings.stepHeight}\n          step={0.25}\n          min={0}\n          units={\"mm\"}\n          onChange={(value) => {\n            dispatch(\n              gcodeActions.gcodeSettings.set({\n                ...gcodeSettings,\n                stepHeight: value,\n              })\n            );\n          }}\n        />\n      </FormContainer>\n    </Block>\n  );\n};\n","import React from \"react\";\nimport { NumberInput } from \"./NumberInput\";\nimport {\n  faPlay,\n  faStepForward,\n  faStop,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Range } from \"../utils\";\n\nexport const RangeGroup = (props: {\n  onChange: (range: Range) => void;\n  onBlur: () => void;\n  range: Range;\n  units: string;\n  step: number;\n}) => {\n  function onInputChange(key: \"start\" | \"step\" | \"stop\", value: number) {\n    props.onChange({\n      ...props.range,\n      [key]: value,\n    });\n  }\n\n  return (\n    <>\n      <NumberInput\n        label=\"Start\"\n        units={props.units}\n        labelIcon={faPlay}\n        value={props.range.start}\n        step={props.range.step}\n        min={0}\n        onChange={(v) => onInputChange(\"start\", v)}\n        onBlur={props.onBlur}\n      />\n      <NumberInput\n        label=\"Step\"\n        units={props.units}\n        labelIcon={faStepForward}\n        value={props.range.step}\n        step={props.step}\n        min={props.step}\n        onChange={(v) => onInputChange(\"step\", v)}\n        onBlur={props.onBlur}\n      />\n      <NumberInput\n        label=\"Stop\"\n        units={props.units}\n        labelIcon={faStop}\n        value={props.range.stop}\n        step={props.range.step}\n        min={0}\n        onChange={(v) => onInputChange(\"stop\", v)}\n        onBlur={props.onBlur}\n      />\n    </>\n  );\n};\n","import { TransformVariable } from \"./gcode/transformers\";\n\nexport interface Range {\n  start: number;\n  stop: number;\n  step: number;\n}\n\nexport function snapRange(range: Range): Range {\n  let { start, step, stop } = range;\n  if (start + step > stop) {\n    stop = start + step;\n  }\n\n  stop = Math.floor(stop / step) * step;\n\n  return {\n    start,\n    step,\n    stop,\n  };\n}\n\nexport function rangeValues(range: Range): number[] {\n  if (range.step <= 0) return [];\n\n  let values = [];\n\n  let x = range.start;\n  for (let i = 0; i < 20; i++) {\n    if (x > range.stop) {\n      break;\n    }\n\n    values.push(x);\n    x += range.step;\n  }\n\n  return values;\n}\n\ntype VariableCopy = {\n  readonly name: string;\n  readonly units: string | null;\n  readonly step: number;\n};\nexport const variableToCopy: Record<TransformVariable, VariableCopy> = {\n  [TransformVariable.RetractDistance]: {\n    name: \"Retraction Distance\",\n    units: \"mm\",\n    step: 0.25,\n  },\n  [TransformVariable.RetractSpeed]: {\n    name: \"Retraction Speed\",\n    units: \"mm/s\",\n    step: 10,\n  },\n  [TransformVariable.Temperature]: {\n    name: \"Hotend Temperature\",\n    units: \"°C\",\n    step: 5,\n  },\n  [TransformVariable.Acceleration]: {\n    name: \"Acceleration\",\n    units: \"mm/s²\",\n    step: 100,\n  },\n  [TransformVariable.Jerk]: {\n    name: \"Jerk\",\n    units: \"mm/s²\",\n    step: 5,\n  },\n  [TransformVariable.Flow]: {\n    name: \"Flow\",\n    units: \"%\",\n    step: 1,\n  },\n  [TransformVariable.LinearAdvance]: {\n    name: \"Linear Advance (Marlin)\",\n    units: \"K\",\n    step: 0.1,\n  },\n};\n","import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStream, faAtom } from \"@fortawesome/free-solid-svg-icons\";\n\nimport { Block } from \"../Block\";\nimport { FormContainer } from \"../forms/FormContainer\";\nimport { RangeGroup } from \"../forms/RangeGroup\";\nimport { TransformVariable } from \"../gcode/transformers\";\n\nimport { snapRange, variableToCopy } from \"../utils\";\nimport { useSelector } from \"../state\";\nimport { gcodeActions } from \"../state/gcode\";\n\nconst VariableSelector = (props: {\n  type: TransformVariable;\n  onChange: (type: TransformVariable) => void;\n}) => {\n  const options = Object.entries(variableToCopy).map(([v, c]) => {\n    return (\n      <option value={v} key={v}>\n        {c.name}\n      </option>\n    );\n  });\n\n  return (\n    <label>\n      <div className=\"FormContainer__labelText\">Variable</div>\n      <div className=\"FormContainer__inputContainer\">\n        <div className=\"FormContainer__inputIcon\">\n          <FontAwesomeIcon icon={faAtom} fixedWidth />\n        </div>\n        <select\n          value={props.type}\n          onChange={(e) => {\n            props.onChange(Number(e.target.value) as TransformVariable);\n          }}\n        >\n          {options}\n        </select>\n      </div>\n    </label>\n  );\n};\n\nexport const TowerSettings = () => {\n  const variable = useSelector((state) => state.gcode.variable);\n  const dispatch = useDispatch();\n  //onst variable = TransformVariable.RetractSpeed;\n  const variableCopy = variableToCopy[variable.type];\n\n  return (\n    <Block title=\"Tower Settings\" titleIcon={faStream}>\n      <div className=\"BlockContent__text\">\n        <p>\n          Configure your <strong>tower settings</strong>.\n        </p>\n        <p>\n          The print will begin with <strong>[variable]</strong> set to{\" \"}\n          <strong>[start]</strong>, increasing by <strong>[step]</strong> each\n          step. The print will finish early automatically after{\" \"}\n          <strong>[stop]</strong> inclusive.\n        </p>\n      </div>\n\n      <FormContainer>\n        <VariableSelector\n          type={variable.type}\n          onChange={(type) => {\n            dispatch(gcodeActions.variable.setType(type));\n          }}\n        />\n        <RangeGroup\n          range={variable.range}\n          units={variableCopy.units!}\n          step={variableCopy.step}\n          onChange={(range) => {\n            dispatch(gcodeActions.variable.setRange(range));\n          }}\n          onBlur={() => {\n            dispatch(gcodeActions.variable.setRange(snapRange(variable.range)));\n          }}\n        />\n      </FormContainer>\n    </Block>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faLayerGroup, faAtom } from \"@fortawesome/free-solid-svg-icons\";\nimport { round } from \"lodash\";\n\nimport { useSelector } from \"../state\";\nimport { rangeValues, variableToCopy } from \"../utils\";\n\nimport \"./SummaryBlock.scss\";\n\nfunction SummaryBlockStep(props: { step: number; value: number }) {\n  return (\n    <tr className=\"SummaryBlockStep\">\n      <td className=\"SummaryBlockStep__step\">{props.step}</td>\n      <td className=\"SummaryBlockStep__value\">{round(props.value, 2)}</td>\n    </tr>\n  );\n}\n\nexport const SummaryBlock: FunctionComponent = () => {\n  const { type, range } = useSelector((state) => state.gcode.variable);\n  const stepValues = rangeValues(range);\n  stepValues.reverse();\n\n  const copy = variableToCopy[type];\n\n  return (\n    <table className=\"SummaryBlock__table\">\n      <thead>\n        <tr>\n          <td className=\"SummaryBlock__stepHeader\">\n            <FontAwesomeIcon icon={faLayerGroup} fixedWidth /> Step\n          </td>\n          <td className=\"SummaryBlock__valueHeader\">\n            <FontAwesomeIcon icon={faAtom} fixedWidth /> {copy.name} (\n            {copy.units})\n          </td>\n        </tr>\n      </thead>\n      <tbody>\n        {stepValues.map((v, i) => (\n          <SummaryBlockStep step={stepValues.length - i} value={v} key={i} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCopy } from \"@fortawesome/free-solid-svg-icons\";\nimport classNames from \"classnames\";\n\nimport \"./CopyCode.scss\";\n\nexport default function (props: { children: string }) {\n  const [copied, setCopied] = useState(false);\n  const statusTextClasses = classNames({\n    CopyCodeStatusText: true,\n    \"CopyCodeStatusText--visible\": copied,\n  });\n\n  return (\n    <code\n      className=\"CopyCode\"\n      onClick={() => {\n        navigator.clipboard.writeText(props.children);\n        setCopied(true);\n        setTimeout(() => {\n          setCopied(false);\n        }, 2500);\n      }}\n    >\n      <div className=\"CopyCodeStatus\">\n        <div className={statusTextClasses}> Copied!</div>\n        <FontAwesomeIcon icon={faCopy} pull=\"right\" />\n      </div>\n      {props.children}\n    </code>\n  );\n}\n","import React, { useRef } from \"react\";\nimport \"./TestShapes.scss\";\n\nconst RotatingVideo = (props: { path: string }) => {\n  const videoRef = useRef<HTMLVideoElement>(null);\n\n  return (\n    <video src={props.path} ref={videoRef} playsInline autoPlay muted loop />\n  );\n};\n\nexport const TestShapes: React.FunctionComponent = (props) => {\n  return (\n    <div className=\"TestShapeContainer\">\n      <a\n        className=\"TestShape\"\n        href={`${process.env.PUBLIC_URL}/retraction_tower.stl`}\n      >\n        <RotatingVideo\n          path={`${process.env.PUBLIC_URL}/retraction_tower.webm`}\n        />\n        <p>Retraction</p>\n      </a>\n      <a\n        className=\"TestShape\"\n        href={`${process.env.PUBLIC_URL}/edge_tower.stl`}\n      >\n        <RotatingVideo path={`${process.env.PUBLIC_URL}/edge_tower.webm`} />\n        <p>Edges</p>\n      </a>\n      <a\n        className=\"TestShape\"\n        href={`${process.env.PUBLIC_URL}/overhang_tower.stl`}\n      >\n        <RotatingVideo path={`${process.env.PUBLIC_URL}/overhang_tower.webm`} />\n        <p>Overhangs</p>\n      </a>\n      <a\n        className=\"TestShape\"\n        href={`${process.env.PUBLIC_URL}/temperature_tower.stl`}\n      >\n        <RotatingVideo\n          path={`${process.env.PUBLIC_URL}/temperature_tower.webm`}\n        />\n        <p>Temperature</p>\n      </a>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faStream } from \"@fortawesome/free-solid-svg-icons\";\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\n\nimport \"./Header.scss\";\n\nexport const Header = () => {\n  const tag = process.env.REACT_APP_GIT_TAG;\n\n  return (\n    <header>\n      <h1>\n        <FontAwesomeIcon icon={faStream} fixedWidth transform=\"down-1 grow-4\" />{\" \"}\n        Tower Tool\n      </h1>\n      <h2>\n        <a href=\"https://github.com/Knifa/tower-tool\">\n          <FontAwesomeIcon\n            icon={faGithub}\n            fixedWidth\n            transform=\"down-1 grow-4\"\n          />\n        </a>{\" \"}\n        <a href={`https://github.com/Knifa/tower-tool/tree/${tag}`}>{tag}</a> by{\" \"}\n        <a href=\"https://github.com/Knifa\">@knifa</a>\n      </h2>\n    </header>\n  );\n};\n","import React, { FunctionComponent } from \"react\";\nimport CopyCode from \"./CopyCode\";\nimport { TestShapes } from \"./TestShapes\";\nimport { Header } from \"./Header\";\n\nimport \"./Intro.scss\";\n\nexport const Intro: FunctionComponent = () => {\n  return (\n    <div className=\"Intro\">\n      <Header />\n\n      <h2>Hello!</h2>\n      <p>\n        This tool can generate sweet <strong>calibration towers</strong> for\n        your 3D printer. All you need to do is slice your test shape, upload it\n        here, configure your options, and hit go!\n      </p>\n      <p>\n        If you're a keen bean, please{\" \"}\n        <a href=\"https://github.com/Knifa/tower-tool\">\n          check out Tower Tool on GitHub!\n        </a>\n      </p>\n      <h2>Test Shapes</h2>\n      <p>Try out these test shapes! They're compact and quick to print.</p>\n      <TestShapes />\n      <p>\n        They each have a <strong>0.5mm tall base</strong> with{\" \"}\n        <strong>20x 4mm tall steps</strong>. Slice them with a layer height of{\" \"}\n        <strong>0.25mm</strong>.\n      </p>\n      <h2>Slicer Setup</h2>\n      <p>\n        We need to be able to figure out when a new layer starts and when the\n        print is over. You'll need to make a couple of changes to your slicer to\n        get going.\n      </p>\n      <h3>Layer Change</h3>\n      <p>\n        Using <strong>Cura</strong>? You're all set.\n      </p>\n      <p>\n        Using <strong>PrusaSlicer</strong> or <strong>Slic3r</strong>? Add the\n        line below to the start of the textbox under{\" \"}\n        <em>Printer Settings ➤ Custom G-code ➤ Before Layer Change G-code</em>.\n      </p>\n      <CopyCode>;LAYER:[layer_num]</CopyCode>\n      <p>\n        Using <strong>something else</strong>? Something like the line above\n        needs to appear after every layer change with the new layer number,\n        starting from zero.\n      </p>\n      <h3>Print End</h3>\n      <p>\n        Using <strong>Cura</strong>? Add the line below to the start of the\n        textbox under{\" \"}\n        <em>\n          Preferences ➤ Printers ➤ [your printer] ➤ Machine Settings ➤ End\n          G-code\n        </em>\n        .\n      </p>\n      <p>\n        Using <strong>PrusaSlicer</strong> or <strong>Slic3r</strong>? Add the\n        line below to the start of the textbox under{\" \"}\n        <em>Printer Settings ➤ Custom G-code ➤ End G-code</em>.\n      </p>\n      <CopyCode>;PRINT_END</CopyCode>\n      <p>\n        Using <strong>something else</strong>? Something like the line above\n        needs to appear just as the print is about to end, before any actions\n        like homing or turning off fans.\n      </p>\n    </div>\n  );\n};\n","export async function readFileText(file: File): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const fileReader = new FileReader();\n\n    fileReader.onload = (e) => {\n      resolve(e.target!.result as string);\n    };\n    fileReader.onerror = reject;\n\n    fileReader.readAsText(file);\n  });\n}\n\nexport function saveLines(lines: string[]) {\n  const gcode = lines.join(\"\\n\");\n  const blob = new Blob([gcode], { type: \"text/plain\" });\n  const url = URL.createObjectURL(blob);\n\n  const a = document.createElement(\"a\");\n  a.download = \"output.gcode\";\n  a.href = url;\n  a.target = \"_blank\";\n  a.click();\n}\n","import { Range } from \"../utils\";\nimport { readFileText } from \"./utils\";\nimport {\n  TransformVariable,\n  GCodeTransformer,\n  RetractTransformer,\n  TemperatureTransformer,\n  AccelerationTransformer,\n  JerkTransformer,\n  FlowTransformer,\n  LinearAdvanceTransformer,\n  TransformerActionNoOp,\n  TransformerActionReplace,\n  TransformerActionSkipToEnd,\n  TransformerActionAppend,\n} from \"./transformers\";\n\nexport class GCodeFile {\n  readonly file: File;\n  readonly lines: string[];\n\n  constructor(file: File, lines: string[]) {\n    this.file = file;\n    this.lines = lines;\n  }\n\n  static async fromFile(file: File): Promise<GCodeFile> {\n    const text = await readFileText(file);\n    const lines = text.split(\"\\n\");\n\n    return new GCodeFile(file, lines);\n  }\n}\n\nexport class GCodeLocation {\n  readonly layer: number;\n  readonly z: number;\n  readonly chunk: number | null;\n\n  constructor(layer: number = 0, z: number = 0, chunk: number | null = null) {\n    this.layer = layer;\n    this.z = z;\n    this.chunk = chunk;\n  }\n\n  static fromLayer(\n    layer: number,\n    layerHeight: number,\n    chunkHeight: number,\n    chunkOffset: number\n  ): GCodeLocation {\n    const z = layerHeight * (layer + 1);\n\n    let chunk: number | null;\n    if (z > chunkOffset) {\n      chunk = Math.floor((z - chunkOffset) / chunkHeight);\n    } else {\n      chunk = null;\n    }\n\n    return new GCodeLocation(layer, z, chunk);\n  }\n}\n\nexport interface GCodeSettings {\n  layerHeight: number;\n  baseHeight: number;\n  stepHeight: number;\n}\n\nexport class GCodeProcessor {\n  private layerRegex: RegExp;\n  private location: GCodeLocation;\n  private settings: GCodeSettings;\n  private transformer: GCodeTransformer;\n\n  constructor(opts: {\n    settings: GCodeSettings;\n    transformer: GCodeTransformer;\n  }) {\n    this.layerRegex = /;LAYER:(?<layerNum>\\d+)/;\n    this.location = new GCodeLocation();\n    this.settings = opts.settings;\n    this.transformer = opts.transformer;\n  }\n\n  process(gcode: GCodeFile) {\n    const outputLines = [];\n    let skippingToEnd = false;\n\n    for (const line of gcode.lines) {\n      if (skippingToEnd) {\n        if (line === \";PRINT_END\") {\n          skippingToEnd = false;\n        } else {\n          continue;\n        }\n      }\n\n      if (this.updateLocation(line)) {\n        const layerAction = this.transformer.onLayer(this.location);\n        if (layerAction instanceof TransformerActionAppend) {\n          outputLines.push(...layerAction.lines);\n        } else if (layerAction instanceof TransformerActionSkipToEnd) {\n          skippingToEnd = true;\n        }\n      }\n\n      const lineAction = this.transformer.onLine(line, this.location);\n      if (lineAction instanceof TransformerActionNoOp) {\n        outputLines.push(line);\n      } else if (lineAction instanceof TransformerActionAppend) {\n        outputLines.push(line, ...lineAction.lines);\n      } else if (lineAction instanceof TransformerActionReplace) {\n        outputLines.push(...lineAction.lines);\n      } else if (lineAction instanceof TransformerActionSkipToEnd) {\n        skippingToEnd = true;\n      }\n    }\n\n    return outputLines;\n  }\n\n  private updateLocation(line: string): boolean {\n    const layerMatch = line.match(this.layerRegex);\n    if (layerMatch) {\n      const layerNum = Number.parseInt(layerMatch.groups![\"layerNum\"]);\n      if (layerNum !== this.location?.layer) {\n        this.location = GCodeLocation.fromLayer(\n          layerNum,\n          this.settings.layerHeight,\n          this.settings.stepHeight,\n          this.settings.baseHeight\n        );\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  static fromVariable(\n    type: TransformVariable,\n    settings: GCodeSettings,\n    range: Range\n  ) {\n    let transformer: GCodeTransformer;\n\n    switch (type) {\n      case TransformVariable.RetractDistance: {\n        transformer = new RetractTransformer({\n          distanceRange: range,\n        });\n        break;\n      }\n\n      case TransformVariable.RetractSpeed: {\n        transformer = new RetractTransformer({\n          speedRange: range,\n        });\n        break;\n      }\n\n      case TransformVariable.Temperature: {\n        transformer = new TemperatureTransformer(range);\n        break;\n      }\n\n      case TransformVariable.Acceleration: {\n        transformer = new AccelerationTransformer(range);\n        break;\n      }\n\n      case TransformVariable.Jerk: {\n        transformer = new JerkTransformer(range);\n        break;\n      }\n\n      case TransformVariable.Flow: {\n        transformer = new FlowTransformer(range);\n        break;\n      }\n\n      case TransformVariable.LinearAdvance: {\n        transformer = new LinearAdvanceTransformer(range);\n        break;\n      }\n    }\n\n    return new GCodeProcessor({\n      settings,\n      transformer,\n    });\n  }\n}\n","import React, { useState } from \"react\";\n\nimport { GCodeInputBlock } from \"./blocks/GCodeInputBlock\";\nimport { GCodeOutputBlock } from \"./blocks/GCodeOutputBlock\";\nimport { GCodeSettingsBlock } from \"./blocks/GCodeSettingsBlock\";\nimport { TowerSettings } from \"./blocks/TowerSettings\";\nimport { SummaryBlock } from \"./blocks/SummaryBlock\";\nimport { Intro } from \"./Intro\";\n\nimport { useSelector } from \"./state\";\nimport { GCodeFile, GCodeProcessor, saveLines } from \"./gcode\";\n\nimport \"./App.scss\";\n\nexport const App = () => {\n  const [gcodeFile, setGcodeFile] = useState<File | null>(null);\n  const state = useSelector((state) => state);\n\n  const processEnabled = gcodeFile !== null;\n\n  const onDragPrevent = (e: React.DragEvent) => {\n    e.preventDefault();\n  };\n\n  const onFileDrop = (e: React.DragEvent) => {\n    const file = e.dataTransfer.files[0];\n    setGcodeFile(file);\n    e.preventDefault();\n  };\n\n  return (\n    <div\n      className=\"App\"\n      onDragEnter={onDragPrevent}\n      onDragOver={onDragPrevent}\n      onDrop={onFileDrop}\n    >\n      <div className=\"DarkSide\">\n        <Intro />\n      </div>\n\n      <div className=\"LightSide\">\n        <GCodeInputBlock\n          filename={gcodeFile ? gcodeFile.name : undefined}\n          onChange={setGcodeFile}\n        />\n        <GCodeSettingsBlock />\n        <TowerSettings />\n        <SummaryBlock />\n        <GCodeOutputBlock\n          onProcessClick={() => {\n            GCodeFile.fromFile(gcodeFile!).then((f) => {\n              const processor = GCodeProcessor.fromVariable(\n                state.gcode.variable.type,\n                state.gcode.gcodeSettings,\n                state.gcode.variable.range\n              );\n\n              const lines = processor.process(f);\n              saveLines(lines);\n            });\n          }}\n          enabled={processEnabled}\n        />\n      </div>\n    </div>\n  );\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { Provider } from \"react-redux\";\nimport { store } from \"./state\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}